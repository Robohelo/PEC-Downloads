{"version":3,"sources":["components/slider.jsx","components/camera.jsx","components/sensor.jsx","components/creat.jsx","components/distance.jsx","components/body.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","height","marks","value","label","InputSlider","props","classes","React","useState","setValue","name","socket","useEffect","on","fan","temp","hum","id","onEin","className","Typography","gutterBottom","Grid","container","spacing","item","xs","Slider","orientation","onChange","event","newValue","onoff","onZero","notZero","onChangeCommitted","emit","aria-labelledby","Input","target","Number","onBlur","inputProps","step","min","max","type","Camera","data","Example","src","console","log","ReactDOM","render","document","getElementById","e","onReady","mÃ¼ll","onCreat","Sensor","sensor","setSensor","theme","margin","Creat","setName","setFan","setTemp","setHum","noValidate","autoComplete","TextField","variant","onClick","notCreat","Distance","time","time2","re","RegExp","ip","window","location","href","URL","exec","multex","Body","state","sliders","slider","camera","creat","io","transports","Zero","items","setState","itemis","itemi","Ein","itemes","iteme","Ready","shutDown","changePage","setInterval","clearInterval","this","map","key","Component","App","Boolean","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4PAQMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,IACPC,OAAQ,OAIVC,EAAQ,CACV,CACIC,MAAO,EACPC,MAAO,MAEX,CACID,MAAO,GACPC,MAAO,OAEX,CACID,MAAO,GACPC,MAAO,OAEX,CACID,MAAO,GACPC,MAAO,OAEX,CACID,MAAO,IACPC,MAAO,SAKA,SAASC,EAAYC,GAChC,IAAMC,EAAUV,IADuB,EAEbW,IAAMC,SAASH,EAAMH,MAAMA,OAFd,mBAEhCA,EAFgC,KAEzBO,EAFyB,KAGjCC,EAAOH,IAAMC,SAASH,EAAMK,MAC5BC,EAASN,EAAMM,OAErBC,qBAAU,WACND,EAAOE,GAAG,cAAa,SAACC,EAAIC,EAAKC,EAAIC,GAC9BA,IAAKZ,EAAMY,IACVZ,EAAMa,MAAMJ,EAAIC,EAAKC,SAsDjC,OACI,yBAAKG,UAAWb,EAAQR,MACpB,kBAACsB,EAAA,EAAD,CAAYH,GAAG,eAAeI,cAAY,GACrCX,GAEL,kBAACY,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GACT,yBAAKP,UAAWb,EAAQR,MACpB,kBAAC6B,EAAA,EAAD,CACIC,YAAY,WACZ1B,MAAwB,kBAAVA,EAAqBA,EAAQ,EAC3C2B,SAxDG,SAACC,EAAOC,GAC5B1B,EAAMH,MAAM8B,OACXvB,EAASsB,GAEO,IAAbA,EACC1B,EAAM4B,OAAO5B,EAAMY,IAGbZ,EAAM2B,OACR3B,EAAM6B,QAAQ7B,EAAMY,KAK5BR,EAAS,IA2CO0B,kBA7DE,SAACL,EAAQC,GAC/BpB,EAAOyB,KAAK,SAASL,EAAS1B,EAAMY,KA6DhBhB,MAAOA,EACPoC,kBAAgB,mBAI5B,kBAACf,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACa,EAAA,EAAD,CACIpC,MAAOA,EACP2B,SAhDM,SAACC,GACpBzB,EAAMH,MAAM8B,MAC0D,KAA1C,KAAvBF,EAAMS,OAAOrC,MAAe,GAAKsC,OAAOV,EAAMS,OAAOrC,SACrDG,EAAM4B,OAAO5B,EAAMY,IACnBR,EAAS,IAGHJ,EAAM2B,QACR3B,EAAM6B,QAAQ7B,EAAMY,IACpBR,EAAgC,KAAvBqB,EAAMS,OAAOrC,MAAe,GAAKsC,OAAOV,EAAMS,OAAOrC,QAC9DS,EAAOyB,KAAK,SAAgC,KAAvBN,EAAMS,OAAOrC,MAAe,GAAKsC,OAAOV,EAAMS,OAAOrC,OAAOG,EAAMY,KAK/FR,EAAS,IAkCGgC,OA9BD,WACXvC,EAAQ,EACRO,EAAS,GACFP,EAAQ,KACfO,EAAS,MA2BGiC,WAAY,CACRC,KAAM,EACNC,IAAK,EACLC,IAAK,IACLC,KAAM,SACN,kBAAmB,qBC7HhC,SAASC,EAAO1C,GAC3B,IAAMM,EAASN,EAAMM,OAarB,OAXAC,qBAAU,WACND,EAAOE,GAAG,WAAW,SAAAmC,GACjB,IACC,IAAMC,EAAU,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAAH,OAAc,yBAAKE,IAAG,gCAA2BF,MAClEG,QAAQC,IAAIC,IAASC,OAAO,kBAACL,EAAD,CAASD,KAAMA,IAAUO,SAASC,eAAe,eAAgB,MAAMC,IACnGpD,EAAMqD,aAEV/C,EAAOE,GAAG,SAAS,SAAA8C,GACftD,EAAMuD,eAEX,IAEC,yBAAK3C,GAAG,c,YCfD,SAAS4C,EAAOxD,GAC3B,IAAMM,EAASN,EAAMM,OADa,EAENJ,IAAMC,SAASH,EAAMyD,QAFf,mBAE3BA,EAF2B,KAEnBC,EAFmB,KAYlC,OARAnD,qBAAU,WACND,EAAOE,GAAG,UAAS,SAACmC,EAAM/B,GAClBZ,EAAMY,KAAKA,GAEX8C,EAAUf,QAGnB,IAEC,yBAAK7B,UAAU,UACV2C,G,aCbPlE,EAAYC,aAAW,SAACmE,GAAD,MAAY,CACrClE,KAAM,CACF,uBAAwB,CACpBmE,OAAQD,EAAMxC,QAAQ,GACtBzB,MAAO,aAKJ,SAASmE,EAAM7D,GAC1B,IAAMM,EAASN,EAAMM,OACfL,EAAUV,IAFiB,EAGTW,IAAMC,SAAS,OAHN,mBAG1BE,EAH0B,KAGpByD,EAHoB,OAIX5D,IAAMC,SAAS,MAJJ,mBAI1BM,EAJ0B,KAIrBsD,EAJqB,OAKT7D,IAAMC,SAAS,MALN,mBAK1BO,EAL0B,KAKpBsD,EALoB,OAMX9D,IAAMC,SAAS,OANJ,mBAM1BQ,EAN0B,KAMrBsD,EANqB,KAwBjC,OACI,0BAAMnD,UAAWb,EAAQR,KAAMyE,YAAU,EAACC,aAAa,OACnD,6BACI,kBAACC,EAAA,EAAD,CACIxD,GAAG,cACHd,MAAM,OACND,MAAOQ,EACPmB,SAxBK,SAACC,GAClBqC,EAAQrC,EAAMS,OAAOrC,QAwBTwE,QAAQ,aAEZ,kBAACD,EAAA,EAAD,CACIxD,GAAG,cACHd,MAAM,YACND,MAAOY,EACPe,SA5BM,SAACC,GACnBsC,EAAOtC,EAAMS,OAAOrC,QA4BRwE,QAAQ,aAEZ,kBAACD,EAAA,EAAD,CACIxD,GAAG,gBACHd,MAAM,YACND,MAAOa,EACPc,SAhCM,SAACC,GACnBuC,EAAQvC,EAAMS,OAAOrC,QAgCTwE,QAAQ,aAEZ,kBAACD,EAAA,EAAD,CACIxD,GAAG,gBACHd,MAAM,aACND,MAAOc,EACPa,SApCM,SAACC,GACnBwC,EAAOxC,EAAMS,OAAOrC,QAoCRwE,QAAQ,aAEZ,4BAAQzD,GAAG,QAAQ0D,QApChB,WACXhE,EAAOyB,KAAK,UAAyBpB,GACrCX,EAAMuE,aAkCE,oBCjEhB,IAAMhF,EAAYC,aAAW,SAACmE,GAAD,MAAY,CACrClE,KAAM,CACF,uBAAwB,CACpBmE,OAAQD,EAAMxC,QAAQ,GACtBzB,MAAO,aAKJ,SAAS8E,EAASxE,GAC7B,IAAMM,EAASN,EAAMM,OACfL,EAAUV,IAFoB,EAGZW,IAAMC,SAAS,OAHH,mBAG7BE,EAH6B,KAGvByD,EAHuB,KAYpC,OACI,0BAAMhD,UAAWb,EAAQR,KAAMyE,YAAU,EAACC,aAAa,OACnD,6BACI,kBAACC,EAAA,EAAD,CACIxD,GAAG,cACHd,MAAM,gBACND,MAAOQ,EACPmB,SAZC,SAACC,GACdqC,EAAQrC,EAAMS,OAAOrC,OACrBS,EAAOyB,KAAK,WAAWN,EAAMS,OAAOrC,QAWxBwE,QAAQ,eCxB5B,IAII/D,EAGAmE,EACAC,EARAC,EAAG,IAAIC,OAAO,4LACdC,EAAIC,OAAOC,SAASC,KAEpBC,EADQN,EAAGO,KAAKL,GACJ,GAAG,QAEfM,GAAQ,EAiKIC,E,4MA1JZC,MAAO,CACHC,QAAQ,CACJ,CAAC1E,GAAI,EAAGf,MAAO,CAACA,MAAM,GAAG8B,OAAM,GAAOtB,KAAK,aAC3C,CAACO,GAAI,EAAGf,MAAO,CAACA,MAAM,IAAI8B,OAAM,GAAOtB,KAAK,aAC5C,CAACO,GAAI,EAAGf,MAAO,CAACA,MAAM,EAAE8B,OAAM,GAAOtB,KAAK,eAE9CoD,OAAO,CACH,CAAC7C,GAAG,GACJ,CAACA,GAAG,GACJ,CAACA,GAAG,GACJ,CAACA,GAAG,IAER2E,QAAQ,EACRC,QAAQ,EACRC,OAAO,EACPnF,OAAOoF,aAAGT,EAAM,CAAEU,WAAY,CAAC,gB,EAElCC,KAAK,SAAChF,GACH,GAAQ,IAALA,EACH,CAEI,IAAIiF,EAAK,YAAO,EAAKR,MAAMC,SAEvBlE,EAAI,eAAOyE,EAAM,IAErBzE,EAAKvB,MAAM8B,OAAQ,EAEnBkE,EAAM,GAAKzE,EAEX,EAAK0E,SAAS,CAACD,UAEf,IAAIE,EAAM,YAAO,EAAKV,MAAMC,SAExBU,EAAK,eAAOD,EAAO,IAEvBC,EAAMnG,MAAM8B,OAAQ,EAEpBoE,EAAO,GAAKC,EAEZ,EAAKF,SAAS,CAACC,a,EAGvBlE,QAAQ,SAACjB,GACL,GAAW,IAAPA,EAAU,CAEV,IAAIiF,EAAK,YAAO,EAAKR,MAAMC,SAEvBlE,EAAI,eAAOyE,EAAM,IAErBzE,EAAKvB,MAAM8B,OAAQ,EAEnBkE,EAAM,GAAKzE,EAEX,EAAK0E,SAAS,CAACD,UAEf,IAAIE,EAAM,YAAO,EAAKV,MAAMC,SAExBU,EAAK,eAAOD,EAAO,IAEvBC,EAAMnG,MAAM8B,OAAQ,EAEpBoE,EAAO,GAAKC,EAEZ,EAAKF,SAAS,CAACC,a,EAIvBE,IAAI,SAACxF,EAAIC,EAAKC,GACV,IAAIkF,EAAK,YAAO,EAAKR,MAAMC,SAEvBlE,EAAI,eAAOyE,EAAM,IAErBzE,EAAKvB,MAAMA,MAAQY,EAEnBoF,EAAM,GAAKzE,EAEX,EAAK0E,SAAS,CAACD,UACf,IAAIE,EAAM,YAAO,EAAKV,MAAMC,SAExBU,EAAK,eAAOD,EAAO,IAEvBC,EAAMnG,MAAMA,MAAQa,EAEpBqF,EAAO,GAAKC,EAEZ,EAAKF,SAAS,CAACC,WACf,IAAIG,EAAM,YAAO,EAAKb,MAAMC,SAExBa,EAAK,eAAOD,EAAO,IAEvBC,EAAMtG,MAAMA,MAAQc,EAEpBkF,EAAM,GAAKM,EAEX,EAAKL,SAAS,CAACI,Y,EAEnBE,MAAM,WACFjB,GAAO,G,EAGXtB,MAAM,WACF,EAAKiC,SAAS,CAACL,OAAM,K,EAGzBlB,SAAS,WACL,EAAKuB,SAAS,CAACL,OAAM,K,EAGzBY,SAAS,YACL/F,EAAO,EAAK+E,MAAM/E,QACXyB,KAAK,a,EAGhBuE,WAAW,WACJ,EAAKjB,MAAME,QACVjF,EAAO,EAAK+E,MAAM/E,OAClB,EAAKwF,SAAS,CAACP,QAAO,IACtB,EAAKO,SAAS,CAACN,QAAO,IACtBf,EAAM8B,aAAY,WAAcpB,IAAQ7E,EAAOyB,KAAK,aA5HrD,GA4HwEoD,GAAO,KAAU,IACxFrC,QAAQC,IAAIkC,GACZuB,cAAc9B,KAGd,EAAKoB,SAAS,CAACP,QAAO,IACtB,EAAKO,SAAS,CAACN,QAAO,IACtBgB,cAAc/B,GACdC,EAAM6B,aAAY,WAAWjG,EAAOyB,KAAK,gBAAkB,O,uDAIzD,IAAD,OACL,OACI,6BACK,+BACG,4BACI,4BAAQnB,GAAG,OAAO0D,QAASmC,KAAKH,YAAhC,eACCG,KAAKpB,MAAM5B,OAAOiD,KAAI,SAAAjD,GAAM,OAAI,6BAAK,kBAACD,EAAD,CAAQ5C,GAAI6C,EAAO7C,GAAI+F,IAAKlD,EAAO7C,GAAIN,OAAQ,EAAK+E,MAAM/E,OAAQmD,OAAQ,SAEpH,4BACI,4BACI,6BACKgD,KAAKpB,MAAME,QAAUkB,KAAKpB,MAAMC,QAAQoB,KAAI,SAAAnB,GAAM,OAAI,yBAAKzE,UAAU,OAAM,kBAACf,EAAD,CAAa4G,IAAKpB,EAAO3E,GAAIf,MAAO0F,EAAO1F,MAAO+B,OAAQ,EAAKgE,KAAM/D,QAAS,EAAKA,QAASjB,GAAI2E,EAAO3E,GAAIP,KAAMkF,EAAOlF,KAAMC,OAAQ,EAAK+E,MAAM/E,OAAQO,MAAO,EAAKoF,UAChPQ,KAAKpB,MAAMG,QAAU,kBAAC9C,EAAD,CAAQpC,OAAQmG,KAAKpB,MAAM/E,OAAQ+C,QAASoD,KAAKL,MAAO7C,QAASkD,KAAK5C,QAC3F4C,KAAKpB,MAAMI,OAAO,kBAAC5B,EAAD,CAAOvD,OAAQmG,KAAKpB,MAAM/E,OAAQiE,SAAUkC,KAAKlC,WACnE,kBAACC,EAAD,CAAUlE,OAAQmG,KAAKpB,MAAM/E,SAC9B,4BAAQM,GAAG,WAAW0D,QAASmC,KAAKJ,UAApC,kB,GAlJbO,aCRJC,MARf,WACE,OACE,6BACI,kBAAC,EAAD,QCIYC,QACW,cAA7BhC,OAAOC,SAASgC,UAEe,UAA7BjC,OAAOC,SAASgC,UAEhBjC,OAAOC,SAASgC,SAASC,MACvB,2DCZNhE,IAASC,OACP,kBAAC,IAAMgE,WAAP,KACE,kBAAC,EAAD,OAEF/D,SAASC,eAAe,SDyHpB,kBAAmB+D,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3E,QAAQ2E,MAAMA,EAAMC,a","file":"static/js/main.3b639c46.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 150,\r\n        height: 250,\r\n    },\r\n});\r\n\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n        label: '0%',\r\n    },\r\n    {\r\n        value: 25,\r\n        label: '25%',\r\n    },\r\n    {\r\n        value: 50,\r\n        label: '50%',\r\n    },\r\n    {\r\n        value: 75,\r\n        label: '75%',\r\n    },\r\n    {\r\n        value: 100,\r\n        label: '100%',\r\n    },\r\n];\r\n\r\n\r\nexport default function InputSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(props.value.value);\r\n    const name = React.useState(props.name);\r\n    const socket = props.socket;\r\n\r\n    useEffect(() =>{\r\n        socket.on('accountein',(fan,temp,hum,id) =>{\r\n            if(id===props.id){\r\n                props.onEin(fan,temp,hum);\r\n            }\r\n        });\r\n    })\r\n\r\n    const onChangeCommitted = (event , newValue) => {\r\n        socket.emit(\"slider\",newValue,props.id);\r\n    }\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        if(props.value.onoff){\r\n            setValue(newValue);\r\n\r\n            if(newValue === 0) {\r\n                props.onZero(props.id);\r\n            }\r\n            else{\r\n                if (!(props.onoff)){\r\n                    props.notZero(props.id);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            setValue(0);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        if(props.value.onoff){\r\n            if((event.target.value === '' ? '' : Number(event.target.value)) === 0) {\r\n                props.onZero(props.id);\r\n                setValue(0);\r\n            }\r\n            else{\r\n                if (!(props.onoff)){\r\n                    props.notZero(props.id);\r\n                    setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n                    socket.emit(\"slider\",event.target.value === '' ? '' : Number(event.target.value),props.id);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            setValue(0);\r\n        }\r\n    };\r\n\r\n    const handleBlur = () => {\r\n        if (value < 0) {\r\n            setValue(0);\r\n        } else if (value > 100) {\r\n            setValue(100);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography id=\"input-slider\" gutterBottom>\r\n                {name}\r\n            </Typography>\r\n            <Grid container spacing={0} >\r\n                <Grid item xs>\r\n                    <div className={classes.root}>\r\n                        <Slider\r\n                            orientation=\"vertical\"\r\n                            value={typeof value === 'number' ? value : 0}\r\n                            onChange={handleSliderChange}\r\n                            onChangeCommitted={onChangeCommitted}\r\n                            marks={marks}\r\n                            aria-labelledby=\"input-slider\"\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Input\r\n                        value={value}\r\n                        onChange={handleInputChange}\r\n                        onBlur={handleBlur}\r\n                        inputProps={{\r\n                            step: 5,\r\n                            min: 0,\r\n                            max: 100,\r\n                            type: 'number',\r\n                            'aria-labelledby': 'input-slider',\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\nexport default function Camera(props) {\r\n    const socket = props.socket;\r\n\r\n    useEffect(() => {\r\n        socket.on(\"message\", data => {\r\n            try {\r\n            {const Example = ({ data }) => <img src={`data:image/jpg;base64,${data}`} />\r\n            console.log(ReactDOM.render(<Example data={data} />, document.getElementById('container')))}}catch(e){};\r\n            props.onReady();\r\n        });\r\n        socket.on(\"creat\", mÃ¼ll =>{\r\n            props.onCreat();\r\n        })\r\n    }, []);\r\n    return (\r\n        <div id=\"container\">\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useEffect } from \"react\";\r\nimport '../App.css';\r\n\r\n\r\nexport default function Sensor(props) {\r\n    const socket = props.socket;\r\n    const [sensor, setSensor] = React.useState(props.sensor);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"sensor\",(data, id) => {\r\n            if (props.id===id)\r\n            {\r\n                setSensor(data);\r\n            }\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"Sensor\">\r\n            {sensor}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../App.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Creat(props) {\r\n    const socket = props.socket;\r\n    const classes = useStyles();\r\n    const [name, setName] = React.useState('Adi');\r\n    const [fan, setFan] = React.useState('30');\r\n    const [temp, setTemp] = React.useState('40');\r\n    const [hum, setHum] = React.useState('100');\r\n    const handleChange = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n    const handleChange0 = (event) => {\r\n        setFan(event.target.value);\r\n    };\r\n    const handleChange1 = (event) => {\r\n        setTemp(event.target.value);\r\n    };\r\n    const handleChange2 = (event) => {\r\n        setHum(event.target.value);\r\n    };\r\n    const sendData=()=>{\r\n        socket.emit(\"account\",(name,fan,temp,hum));\r\n        props.notCreat();\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    id=\"filled-name\"\r\n                    label=\"Name\"\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    id=\"filled-name\"\r\n                    label=\"LÃ¼fter\"\r\n                    value={fan}\r\n                    onChange={handleChange0}\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-name\"\r\n                    label=\"Heizspule\"\r\n                    value={temp}\r\n                    onChange={handleChange1}\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-name\"\r\n                    label=\"Befeuchter\"\r\n                    value={hum}\r\n                    onChange={handleChange2}\r\n                    variant=\"outlined\"\r\n                />\r\n                <button id=\"creat\" onClick={sendData}>Create Account</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Distance(props) {\r\n    const socket = props.socket;\r\n    const classes = useStyles();\r\n    const [name, setName] = React.useState('0,5');\r\n    const handleChange = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n    const onChange = (event) => {\r\n        setName(event.target.value);\r\n        socket.emit(\"distance\",event.target.value);\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    id=\"filled-name\"\r\n                    label=\"Distance in m\"\r\n                    value={name}\r\n                    onChange={onChange}\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport InputSlider from \"./slider\";\r\nimport Camera from \"./camera\";\r\nimport {io} from \"socket.io-client\";\r\nimport Sensor from \"./sensor\";\r\nimport Creat from \"./creat\";\r\nimport Distance from \"./distance\";\r\n\r\n\r\nlet re=new RegExp('(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{1,256}\\\\.[a-zA-Z0-9()]{1,6}\\\\b|https?:\\\\/\\\\/localhost')\r\nlet ip= window.location.href;\r\nlet halter= re.exec(ip);\r\nlet URL= halter[0]+\":5000\";\r\nlet socket;\r\nlet multex= true;\r\nconst halt=1;\r\nlet time;\r\nlet time2;\r\n\r\n\r\nclass Body extends Component{\r\n    state ={\r\n        sliders:[\r\n            {id: 1, value: {value:50,onoff:true}, name:\"LÃ¼fter\"},\r\n            {id: 2, value: {value:100,onoff:true}, name:\"Heizspule\"},\r\n            {id: 3, value: {value:0,onoff:true}, name:\"Befeuchter\"},\r\n        ],\r\n        sensor:[\r\n            {id:1},\r\n            {id:2},\r\n            {id:3},\r\n            {id:4},\r\n        ],\r\n        slider: true,\r\n        camera: false,\r\n        creat: false,\r\n        socket:io(URL,  { transports: [\"websocket\"] })\r\n    }\r\n     Zero=(id)=>{\r\n        if(id===1)\r\n        {\r\n            //Slider 3\r\n            let items = [...this.state.sliders];\r\n            // 2. Make a shallow copy of the item you want to mutate\r\n            let item = {...items[2]};\r\n            // 3. Replace the property you're intested in\r\n            item.value.onoff = false;\r\n            // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n            items[2] = item;\r\n            // 5. Set the state to our new copy\r\n            this.setState({items});\r\n            // Slider 2\r\n            let itemis = [...this.state.sliders];\r\n            // 2. Make a shallow copy of the item you want to mutate\r\n            let itemi = {...itemis[1]};\r\n            // 3. Replace the property you're intested in\r\n            itemi.value.onoff = false;\r\n            // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n            itemis[1] = itemi;\r\n            // 5. Set the state to our new copy\r\n            this.setState({itemis});\r\n        }\r\n    }\r\n    notZero=(id)=> {\r\n        if (id === 1) {\r\n            //Slider 3\r\n            let items = [...this.state.sliders];\r\n            // 2. Make a shallow copy of the item you want to mutate\r\n            let item = {...items[2]};\r\n            // 3. Replace the property you're intested in\r\n            item.value.onoff = true;\r\n            // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n            items[2] = item;\r\n            // 5. Set the state to our new copy\r\n            this.setState({items});\r\n            // Slider 2\r\n            let itemis = [...this.state.sliders];\r\n            // 2. Make a shallow copy of the item you want to mutate\r\n            let itemi = {...itemis[1]};\r\n            // 3. Replace the property you're intested in\r\n            itemi.value.onoff = true;\r\n            // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n            itemis[1] = itemi;\r\n            // 5. Set the state to our new copy\r\n            this.setState({itemis});\r\n        }\r\n    }\r\n\r\n    Ein=(fan,temp,hum)=>{\r\n        let items = [...this.state.sliders];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let item = {...items[0]};\r\n        // 3. Replace the property you're intested in\r\n        item.value.value = fan;\r\n        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n        items[0] = item;\r\n        // 5. Set the state to our new copy\r\n        this.setState({items});\r\n        let itemis = [...this.state.sliders];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let itemi = {...itemis[1]};\r\n        // 3. Replace the property you're intested in\r\n        itemi.value.value = temp;\r\n        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n        itemis[1] = itemi;\r\n        // 5. Set the state to our new copy\r\n        this.setState({itemis});\r\n        let itemes = [...this.state.sliders];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let iteme = {...itemes[2]};\r\n        // 3. Replace the property you're intested in\r\n        iteme.value.value = hum;\r\n        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n        items[2] = iteme;\r\n        // 5. Set the state to our new copy\r\n        this.setState({itemes});\r\n    }\r\n    Ready=()=>{\r\n        multex=true;\r\n    }\r\n\r\n    Creat=()=>{\r\n        this.setState({creat:true});\r\n    }\r\n\r\n    notCreat=()=>{\r\n        this.setState({creat:false});\r\n    }\r\n\r\n    shutDown=()=>{\r\n        socket=this.state.socket;\r\n        socket.emit(\"shutdown\")\r\n    }\r\n\r\n    changePage=()=> {\r\n        if(this.state.slider){\r\n            socket=this.state.socket;\r\n            this.setState({slider:false});\r\n            this.setState({camera:true});\r\n            time= setInterval(function(){if(multex){socket.emit(\"cameratrig\",halt);multex=false;}}, 50);\r\n            console.log(URL);\r\n            clearInterval(time2);\r\n        }\r\n        else{\r\n            this.setState({slider:true});\r\n            this.setState({camera:false});\r\n            clearInterval(time);\r\n            time2=setInterval(function(){socket.emit(\"sensortrig\");} , 1000);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <table>\r\n                    <th>\r\n                        <button id=\"page\" onClick={this.changePage}>Switch Page</button>\r\n                        {this.state.sensor.map(sensor => <div><Sensor id={sensor.id} key={sensor.id} socket={this.state.socket} sensor={0}/></div>)}\r\n                    </th>\r\n                    <tr>\r\n                        <td>\r\n                            <div>\r\n                                {this.state.slider && this.state.sliders.map(slider => <div className=\"App\"><InputSlider key={slider.id} value={slider.value} onZero={this.Zero} notZero={this.notZero} id={slider.id} name={slider.name} socket={this.state.socket} onEin={this.Ein}  /></div>)}\r\n                                {this.state.camera && <Camera socket={this.state.socket} onReady={this.Ready} onCreat={this.Creat}/>}\r\n                                {this.state.creat&&<Creat socket={this.state.socket} notCreat={this.notCreat}/>}\r\n                                {<Distance socket={this.state.socket}/>}\r\n                                <button id=\"shutdown\" onClick={this.shutDown}>Sleep</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default  Body;"," import React from 'react';\nimport './App.css';\nimport Body from \"./components/body\";\n\n\nfunction App() {\n  return (\n    <div>\n        <Body/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}